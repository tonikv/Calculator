{"version":3,"sources":["features/calculator/Calculator.module.css","features/calculator/calculatorSlice.js","features/calculator/Calculator.js","App.js","app/store.js","index.js"],"names":["module","exports","calculatorSlice","createSlice","name","initialState","number","calculation","display","operand","result","reducers","addNumber","state","action","payload","clearNumber","addToCalculation","addToDisplay","clearCalculation","chooseOperand","clearOperand","compute","clearCompute","actions","selectCalculation","calculator","selectOperand","selectResult","selectNumber","selectDisplay","checkOperand","input","dispatch","getState","length","checkInput","includes","console","log","Calculator","useSelector","useDispatch","className","styles","container","buttons","btn","onClick","numbers","split","forEach","item","push","parseFloat","App","store","configureStore","reducer","calculatorReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b79e6214.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calculator_container__mzWPR\",\"buttons\":\"Calculator_buttons__3fg75\",\"btn\":\"Calculator_btn___TiK2\",\"display\":\"Calculator_display__ZdP0G\",\"calculation\":\"Calculator_calculation__2WnWh\",\"result\":\"Calculator_result__3Rr2n\",\"operand\":\"Calculator_operand__pqqhX\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    number: \"\",         // Current number input\r\n    calculation: \"\",    // Keep track of the whole calculation input\r\n    display: \"\",        // For display \r\n    operand: \"\",        // Which calculation to perform\r\n    result: \"\",          // Result of the calculation\r\n}\r\n\r\nexport const calculatorSlice = createSlice ({\r\n    name: 'calculator',\r\n    initialState,\r\n    reducers: {\r\n        addNumber: (state, action) => {\r\n            state.number += action.payload;\r\n        },\r\n        clearNumber: (state) => {\r\n            state.number = \"\";\r\n        },\r\n        addToCalculation: (state, action) => {\r\n            state.calculation += action.payload;\r\n        },\r\n        addToDisplay: (state) => {\r\n            state.display = state.calculation;\r\n        },\r\n        clearCalculation: (state) => {\r\n            state.calculation = \"\";\r\n        },\r\n        chooseOperand: (state, action) => {\r\n            state.operand = action.payload;\r\n        },\r\n        clearOperand: (state) => {\r\n            state.operand = \"\"\r\n        },\r\n        compute: (state, action) => {\r\n            state.result = action.payload;\r\n        },\r\n        clearCompute: (state) => {\r\n            state.result = \"\";\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addNumber, addToDisplay, clearNumber, addToCalculation, clearCalculation, chooseOperand, clearOperand, compute, clearCompute } = calculatorSlice.actions;\r\n\r\nexport const selectCalculation = (state) => state.calculator.calculation;\r\nexport const selectOperand = (state) => state.calculator.operand;\r\nexport const selectResult = (state) => state.calculator.result;\r\nexport const selectNumber = (state) => state.calculator.number;\r\nexport const selectDisplay = (state) => state.calculator.display;\r\n\r\n\r\nexport const checkOperand = (input) => (dispatch, getState) => {\r\n    const operand = selectOperand(getState());\r\n    \r\n    if (operand.length === 0) {\r\n        dispatch(chooseOperand(input))\r\n        dispatch(addToCalculation(input))\r\n        dispatch(clearNumber());\r\n    }\r\n}\r\n\r\nexport const checkInput = (input) => (dispatch, getState) => {\r\n    const number = selectNumber(getState());\r\n\r\n    // Check for period\r\n    // If period is first input\r\n    if (input === \".\" && number === \"\") {\r\n        dispatch(addNumber(\"0.\"));\r\n        dispatch(addToCalculation(\"0.\"))\r\n        return\r\n    }\r\n    // if period is allready added\r\n    if (input === \".\" && number.includes(\".\")) {\r\n        console.log(\"cannot add second period\");\r\n    } else {\r\n        dispatch(addNumber(input));\r\n        dispatch(addToCalculation(input))\r\n    }\r\n}\r\n\r\nexport const calculateResult = () => (dispatch, getState) => {\r\n    const regex = /[x%+-]/g\r\n    let numbers = []\r\n    const operand = selectOperand(getState());\r\n    const inputs = selectCalculation(getState()).split(regex);\r\n    inputs.forEach(item => numbers.push(parseFloat(item)));\r\n\r\n    let result = 0.0;\r\n    switch (operand) {\r\n        case \"+\":\r\n            result = numbers[0] + numbers[1];\r\n            break;\r\n        case \"-\":\r\n            result = numbers[0] - numbers[1];\r\n            break;\r\n        case \"x\":\r\n            result = numbers[0] * numbers[1];\r\n            break;\r\n        case \"%\":\r\n            result = numbers[0] / numbers[1];\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    dispatch(addToDisplay());\r\n    dispatch(clearCalculation());\r\n    dispatch(clearNumber());\r\n    dispatch(clearOperand());\r\n    dispatch(compute(result));\r\n}\r\n\r\nexport default calculatorSlice.reducer;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {   \r\n    calculateResult,\r\n    checkInput,\r\n    checkOperand,\r\n    selectNumber,\r\n    selectResult,\r\n    selectCalculation,\r\n    selectDisplay,\r\n} from './calculatorSlice';\r\nimport styles from './Calculator.module.css';\r\n\r\nexport function Calculator() {\r\n    const number = useSelector(selectNumber);\r\n    const result = useSelector(selectResult);\r\n    const calculation = useSelector(selectCalculation);\r\n    const display = useSelector(selectDisplay);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.display}>\r\n                <p className={styles.calculation}>{calculation !== \"\" ? calculation : display}</p>\r\n                <h4 className={styles.result}>{result}</h4>\r\n            </div>\r\n\r\n            <div className={styles.buttons}>\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"7\"))}>7</button>\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"8\"))}>8</button>\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"9\"))}>9</button>\r\n                <button className={styles.operand} onClick={() => dispatch(checkOperand(\"+\"))}>+</button>\r\n\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"4\"))}>4</button>\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"5\"))}>5</button>\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"6\"))}>6</button>\r\n                <button className={styles.operand} onClick={() => dispatch(checkOperand(\"-\"))}>-</button>\r\n\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"1\"))}>1</button>\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"2\"))}>2</button>\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"3\"))}>3</button>\r\n                <button className={styles.operand} onClick={() => dispatch(checkOperand(\"x\"))}>x</button>\r\n\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\"0\"))}>0</button>\r\n                <button className={styles.btn} onClick={() => dispatch(checkInput(\".\"))}>.</button>\r\n                <button className={styles.btn}></button>\r\n                <button className={styles.operand} onClick={() => dispatch(checkOperand(\"%\"))}>%</button>\r\n\r\n                <button className={styles.operand} onClick={() => dispatch(calculateResult())}>=</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Calculator } from './features/calculator/Calculator';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport calculatorReducer from '../features/calculator/calculatorSlice';\n\nexport const store = configureStore({\n  reducer: {\n    calculator: calculatorReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}