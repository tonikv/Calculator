{"version":3,"sources":["features/calculator/Calculator.module.css","features/calculator/calculatorSlice.js","features/calculator/Calculator.js","App.js","app/store.js","index.js"],"names":["module","exports","calculatorSlice","createSlice","name","initialState","number","calculation","display","operand","result","previous","reducers","addNumber","state","action","payload","addPrevious","clearNumber","addToCalculation","removeFromCalculation","clearCalculation","allClear","addToDisplay","clearDisplay","chooseOperand","clearOperand","compute","clearCompute","actions","selectCalculation","calculator","selectResult","selectDisplay","checkInput","input","dispatch","getState","current","selectPrevious","regex","length","includes","console","log","test","Calculator","useSelector","useDispatch","className","styles","container","id","buttons","btn","onClick","toString","checkANS","red","newCalculation","slice","spantwo","fixFirst","firstInCalculation","match","substring","operands","cleanedCalc","replace","numbers","inputs","split","forEach","item","push","parseFloat","first","calc","i","second","toFixed","footer","App","store","configureStore","reducer","calculatorReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab953854.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calculator_container__mzWPR\",\"buttons\":\"Calculator_buttons__3fg75\",\"btn\":\"Calculator_btn___TiK2\",\"spantwo\":\"Calculator_spantwo__2nzjG\",\"red\":\"Calculator_red__1OPwm\",\"display\":\"Calculator_display__ZdP0G\",\"calculation\":\"Calculator_calculation__2WnWh\",\"result\":\"Calculator_result__3Rr2n\",\"operand\":\"Calculator_operand__pqqhX\",\"footer\":\"Calculator_footer__3EiGu\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    number: \"\",         // Current number input\r\n    calculation: \"\",    // Keep track of the whole calculation input\r\n    display: \"\",        // For display \r\n    operand: \"\",        // Which calculation to perform\r\n    result: \"\",         // Result of the calculation\r\n    previous: \"\",       \r\n}\r\n\r\nexport const calculatorSlice = createSlice ({\r\n    name: 'calculator',\r\n    initialState,\r\n    reducers: {\r\n        addNumber: (state, action) => {\r\n            state.number += action.payload;\r\n        },\r\n        addPrevious: (state, action) => {\r\n            state.previous = action.payload;\r\n        },\r\n        clearNumber: (state) => {\r\n            state.number = \"\";\r\n        },\r\n        addToCalculation: (state, action) => {\r\n            state.calculation += action.payload;\r\n        },\r\n        removeFromCalculation: (state, action) => {\r\n            state.calculation = action.payload;\r\n        },\r\n        clearCalculation: (state) => {\r\n            state.calculation = \"\";\r\n        },\r\n        allClear: (state) => {\r\n            state.number = \"\";\r\n            state.calculation = \"\";\r\n            state.display = \"0\";\r\n            state.operand = \"\";\r\n            state.result = \"0\";\r\n        },\r\n        addToDisplay: (state, action) => {\r\n            state.display = action.payload;\r\n        },\r\n        clearDisplay: (state) => {\r\n            state.display = \"\"\r\n        },\r\n        chooseOperand: (state, action) => {\r\n            state.operand = action.payload;\r\n        },\r\n        clearOperand: (state) => {\r\n            state.operand = \"\"\r\n        },\r\n        compute: (state, action) => {\r\n            state.result = action.payload;\r\n        },\r\n        clearCompute: (state) => {\r\n            state.result = \"\";\r\n        },\r\n    }\r\n})\r\n\r\nexport const { allClear, addNumber, addPrevious, clearNumber, addToDisplay, clearDisplay, addToCalculation, removeFromCalculation, clearCalculation, chooseOperand, clearOperand, compute, clearCompute } = calculatorSlice.actions;\r\n\r\nexport const selectCalculation = (state) => state.calculator.calculation;\r\nexport const selectOperand = (state) => state.calculator.operand;\r\nexport const selectResult = (state) => state.calculator.result;\r\nexport const selectNumber = (state) => state.calculator.number;\r\nexport const selectDisplay = (state) => state.calculator.display;\r\nexport const selectPrevious = (state) => state.calculator.previous;\r\n\r\nexport const checkANS = (result) => (dispatch, getState) => {\r\n    dispatch(removeFromCalculation(result.toString()));\r\n}\r\n\r\nexport const checkDelete = () => (dispatch, getState) => {\r\n    const calculation = selectCalculation(getState());\r\n\r\n    // if there is nothing to delete -> ignore it\r\n    if (calculation.length === 0) {\r\n        console.log(\"Cannot delete\")\r\n        return\r\n    }\r\n    \r\n    let newCalculation= calculation.slice(0, -1);\r\n    dispatch(removeFromCalculation(newCalculation))\r\n}\r\n\r\nexport const checkOperand = (input) => (dispatch, getState) => {\r\n    const operand = selectOperand(getState());\r\n    const calculation = selectCalculation(getState());\r\n    // if operand is first input -> ignore it\r\n    if (calculation.length === 0) {\r\n        console.log(\"input number first\")\r\n        return\r\n    }\r\n    \r\n    if (operand.length === 0) {\r\n        dispatch(chooseOperand(input))\r\n        dispatch(addToCalculation(\" \" + input + \" \"))\r\n        dispatch(clearNumber());\r\n    }\r\n}\r\n\r\nexport const checkInput = (input) => (dispatch, getState) => {\r\n    const current = selectNumber(getState());\r\n    const previous = selectPrevious(getState());\r\n    const calculation = selectCalculation(getState());\r\n    const regex = /[x÷+-]/\r\n\r\n    if (previous === \"0\" && current.length === 1 && input === \"0\") {\r\n        console.log(\"prevent multiple zeroes in the beginning\");\r\n        return;\r\n    }\r\n\r\n    if (input === \".\" && current.includes(\".\")) {\r\n        console.log(\"prevent multiple decimals in one number\");\r\n        return;\r\n    }\r\n\r\n    if (regex.test(input) && regex.test(previous) && input !== \"-\") {\r\n        console.log(\"only one operand\");\r\n        return;\r\n    }   \r\n\r\n    if (previous === \"-\" && input === \"-\" ) {\r\n        const twoDown = calculation[calculation.length-2];\r\n        if(twoDown === \"-\") {\r\n            console.log(\"Prevent triple ---\");\r\n            return;\r\n        }\r\n        if(calculation.length === 1) {\r\n            console.log(\"Cannot start with --\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    if (regex.test(input)) {\r\n        dispatch(clearNumber());\r\n    } else {\r\n        dispatch(addNumber(input));\r\n    }\r\n\r\n    dispatch(addToCalculation(input));\r\n    dispatch(addPrevious(input));\r\n}\r\n\r\nexport const calculateResult = () => (dispatch, getState) => {\r\n    const regex = /[x÷+-]/g\r\n    const regexDouble = /--|\\+-|x-|÷-|[x÷+-]/g\r\n    let fixFirst = false;\r\n\r\n    let calculation = selectCalculation(getState());\r\n    // If there is not calculation --> Leave\r\n    if (calculation.length === 0) {\r\n        return\r\n    }\r\n\r\n    // Clean operands from the end \r\n    const firstInCalculation = calculation[0];\r\n    const lastInCalculation = calculation[calculation.length-1];\r\n    if(lastInCalculation.match(regex)) {\r\n        calculation = calculation.slice(0, -1);\r\n    }\r\n\r\n    //Get negative numbers\r\n    if (firstInCalculation === \"-\") {\r\n        calculation = calculation.substring(1);\r\n        console.log(\"negatiivinen luku\")\r\n        fixFirst = true;\r\n    }\r\n\r\n    const operands = calculation.match(regexDouble);\r\n    console.log(\"operands:\", operands)\r\n\r\n    let cleanedCalc = calculation.replace(/--/g, \"-\");\r\n    cleanedCalc = cleanedCalc.replace(/\\+-/g, \"+\");\r\n    cleanedCalc = cleanedCalc.replace(/x-/g, \"x\");\r\n    cleanedCalc = cleanedCalc.replace(/÷-/g, \"÷\");\r\n\r\n    console.log(\"cleaned calc:\", cleanedCalc);\r\n\r\n    let numbers = []\r\n    const inputs = cleanedCalc.split(regex);\r\n\r\n    if(inputs.length === 1) {\r\n        dispatch(compute(inputs[0]));\r\n        return\r\n    }\r\n \r\n    inputs.forEach(item => numbers.push(parseFloat(item)));\r\n\r\n    let first = numbers[0];\r\n    console.log(\"eka numero\", first)\r\n    if (fixFirst) {\r\n        console.log(\"eka negatiivinen\")\r\n        first = -first;\r\n    }\r\n    let calc = 0;\r\n\r\n    for (let i = 1; i < numbers.length; i++) {\r\n        let second = numbers[i];\r\n        let operand = operands[i - 1];\r\n        calc = first;\r\n        console.log(`${first} ${operand} ${second}`)\r\n\r\n        switch (operand){\r\n            case \"+\":\r\n                calc += second;\r\n                first = calc;\r\n                break;\r\n            case \"-\":\r\n                calc -= second;\r\n                first = calc;\r\n                break;\r\n            case \"x\":\r\n                calc *= second;\r\n                first = calc;\r\n                break;\r\n            case \"÷\":\r\n                calc /= second;\r\n                first = calc;\r\n                break;\r\n            case \"+-\":\r\n                calc += -second;\r\n                first = calc;\r\n                break;\r\n            case \"--\":\r\n                calc -= -second;\r\n                first = calc;\r\n                break;\r\n            case \"x-\":\r\n                calc *= -second;\r\n                first = calc;\r\n                break;\r\n            case \"÷-\":\r\n                calc /= -second;\r\n                first = calc;\r\n                break;\r\n            default:\r\n                break;\r\n            \r\n        }\r\n    }\r\n    console.log(\"calculaatio:\", calc)\r\n    calc = calc.toFixed(2);\r\n    \r\n    dispatch(compute(calc.toString()));\r\n}\r\n\r\nexport default calculatorSlice.reducer;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {   \r\n    calculateResult,\r\n    checkInput,\r\n    checkOperand,\r\n    checkDelete,\r\n    selectResult,\r\n    selectCalculation,\r\n    selectDisplay,\r\n    allClear,\r\n    checkANS,\r\n} from './calculatorSlice';\r\nimport styles from './Calculator.module.css';\r\n\r\nexport function Calculator() {\r\n    const result = useSelector(selectResult);\r\n    const calculation = useSelector(selectCalculation);\r\n    const display = useSelector(selectDisplay);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.display}>\r\n                <p id=\"display\" className={styles.calculation}>{calculation !== \"\" ? calculation : display}</p>\r\n                <h4 className={styles.result}>{result}</h4>\r\n            </div>\r\n\r\n            <div className={styles.buttons}>\r\n                <button id=\"seven\" className={styles.btn} onClick={() => dispatch(checkInput(\"7\"))}>7</button>\r\n                <button id=\"eight\" className={styles.btn} onClick={() => dispatch(checkInput(\"8\"))}>8</button>\r\n                <button id=\"nine\" className={styles.btn} onClick={() => dispatch(checkInput(\"9\"))}>9</button>\r\n                <button id=\"add\" className={styles.btn} onClick={() => dispatch(checkInput(\"+\"))}>+</button>\r\n\r\n                <button id=\"four\" className={styles.btn} onClick={() => dispatch(checkInput(\"4\"))}>4</button>\r\n                <button id=\"five\" className={styles.btn} onClick={() => dispatch(checkInput(\"5\"))}>5</button>\r\n                <button id=\"six\" className={styles.btn} onClick={() => dispatch(checkInput(\"6\"))}>6</button>\r\n                <button id=\"subtract\" className={styles.btn} onClick={() => dispatch(checkInput(\"-\"))}>-</button>\r\n\r\n                <button id=\"one\" className={styles.btn} onClick={() => dispatch(checkInput(\"1\"))}>1</button>\r\n                <button id=\"two\" className={styles.btn} onClick={() => dispatch(checkInput(\"2\"))}>2</button>\r\n                <button id=\"three\" className={styles.btn} onClick={() => dispatch(checkInput(\"3\"))}>3</button>\r\n                <button id=\"multiply\" className={styles.btn} onClick={() => dispatch(checkInput(\"x\"))}>x</button>\r\n\r\n                <button id=\"zero\" className={styles.btn} onClick={() => dispatch(checkInput(\"0\"))}>0</button>\r\n                <button id=\"decimal\" className={styles.btn} onClick={() => dispatch(checkInput(\".\"))}>.</button>\r\n                <button className={styles.btn} onClick={() => dispatch(checkANS(result))}>ANS</button>\r\n                <button id=\"divide\" className={styles.btn} onClick={() => dispatch(checkInput(\"÷\"))}>÷</button>\r\n                \r\n                <button className={`${styles.btn} ${styles.red}`} onClick={() => dispatch(checkDelete())}>DEL</button>\r\n                <button id=\"clear\" className={`${styles.btn} ${styles.red}`}onClick={() => dispatch(allClear())}>AC</button>\r\n                <button id=\"equals\" className={`${styles.btn} ${styles.spantwo}`} onClick={() => dispatch(calculateResult())}>=</button>\r\n            </div>\r\n            <div className={styles.footer}> Calculator by tonikv </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Calculator } from './features/calculator/Calculator';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport calculatorReducer from '../features/calculator/calculatorSlice';\n\nexport const store = configureStore({\n  reducer: {\n    calculator: calculatorReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}